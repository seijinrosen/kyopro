[create]
post_create_commands = [
    "git add ${dir_path}/in ${dir_path}/out ${dir_path}/metadata.toml",
    "code . ${dir_path}/${source_file_name}",
]
clipboard_message = "Create: ${url}"


[judge]
copy_source_code_when_ac = true
clipboard_message = "AC: ${url} ${source_file_name}"


[language]
default = "pypy3"


[language.settings.bash]
source_file_name = "main.bash"
template_file_path = "templates/main.bash"
[language.settings.bash.commands]
pre_execute = ["bash --version"]
execute = "bash ${dir_path}/${source_file_name}"


[language.settings.cpp]
source_file_name = "main.cpp"
template_file_path = "templates/main.cpp"
[language.settings.cpp.commands]
pre_execute = [
    "g++ --version",
    "g++ ${dir_path}/${source_file_name} -o ${dir_path}/a.out",
]
execute = "${dir_path}/a.out"
post_execute = ["rm ${dir_path}/a.out"]


[language.settings.hs]
source_file_name = "main.hs"
template_file_path = "templates/main.hs"
[language.settings.hs.commands]
pre_execute = [
    "ghc --version",
    "ghc ${dir_path}/${source_file_name}",
]
execute = "${dir_path}/main"
post_execute = ["rm ${dir_path}/main ${dir_path}/main.hi ${dir_path}/main.o"]


[language.settings.pypy3]
source_file_name = "main.py"
template_file_path = "templates/main.py"
[language.settings.pypy3.commands]
pre_execute = ["~/pypy3.6-v7.3.0-osx64/bin/pypy3 --version"]
execute = "~/pypy3.6-v7.3.0-osx64/bin/pypy3 ${dir_path}/${source_file_name}"


[language.settings.python3]
source_file_name = "main.py"
template_file_path = "templates/main.py"
[language.settings.python3.commands]
pre_execute = ["python3 --version"]
execute = "python3 ${dir_path}/${source_file_name}"


[language.settings.rs]
source_file_name = "main.rs"
template_file_path = "src/main.rs"
[language.settings.rs.commands]
pre_execute = [
    "cargo --version",
    "cargo build",
]
execute = "target/debug/kyopro"
post_execute = ["cp src/main.rs ${dir_path}"]


[language.settings.ts]
source_file_name = "main.ts"
template_file_path = "templates/main.ts"
[language.settings.ts.commands]
pre_execute = [
    "pnpm tsc --version",
    "pnpm tsc --target ESNEXT --module commonjs ${dir_path}/${source_file_name}",
]
execute = "node ${dir_path}/main.js"
post_execute = ["rm ${dir_path}/main.js"]


[language.settings.zsh]
source_file_name = "main.zsh"
template_file_path = "templates/main.zsh"
[language.settings.zsh.commands]
pre_execute = ["zsh --version"]
execute = "zsh ${dir_path}/${source_file_name}"
